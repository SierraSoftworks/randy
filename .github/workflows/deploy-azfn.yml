name: Deploy Azure Function
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  id-token: write

env:
  CARGO_TERM_COLOR: always
  HANDLER_NAME: rex

  STAGING_DEPLOYMENT_APP_ID: e0d46426-bd93-4bb2-9b5a-cabb0af9a509
  STAGING_FUNCTION_NAME: rex-sierrasoftworks-staging
  STAGING_HEALTHCHECK: "https://rex-staging.sierrasoftworks.com/api/v1/health"

  LIVE_DEPLOYMENT_APP_ID: 25c19850-5c4e-4b6e-9257-a6e62b31e2e7
  LIVE_FUNCTION_NAME: rex-sierrasoftworks
  LIVE_HEALTHCHECK: "https://rex.sierrasoftworks.com/api/v1/health"

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3

      - uses: Swatinem/rust-cache@v1

      - name: Build Handler
        run:
          docker run --rm -t -v $PWD:/volume clux/muslrust cargo build --release --features table_storage

      - run: cp target/x86_64-unknown-linux-musl/release/$HANDLER_NAME ./handler

      - name: Save handler artifact
        uses: actions/upload-artifact@v3
        with:
          name: handler
          path: handler

  deploy-staging:
    needs: build

    runs-on: ubuntu-20.04
    if: github.actor != 'dependabot[bot]'
    environment:
      name: Staging
      url: ${{ env.STAGING_HEALTHCHECK }}

    steps:
      - uses: actions/checkout@v3

      - name: Fetch handler artifact
        uses: actions/download-artifact@v3
        with:
          name: handler

      - run: mv ./handler ./$HANDLER_NAME
      
      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          tenant-id: a26571f1-22b3-4756-ac7b-39ca684fab48
          subscription-id: 108b3ddb-53fb-4344-80b2-d6c151912be6
          client-id: ${{ env.STAGING_DEPLOYMENT_APP_ID }}

      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.STAGING_FUNCTION_NAME }}
          respect-funcignore: 'true'
  
  healthcheck-staging:
    needs: deploy-staging
    runs-on: ubuntu-20.04
    
    steps:
      - name: Probe
        uses: Jtalk/url-health-check-action@v3
        with:
          url: ${{ env.STAGING_HEALTHCHECK }}
          max-attempts: 5
          retry-delay: 10s
          follow-redirect: true

  deploy-live:
    needs: healthcheck-staging
    if: github.event_name == 'push'
    environment:
      name: Production
      url: ${{ env.LIVE_HEALTHCHECK }}

    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3

      - name: Fetch handler artifact
        uses: actions/download-artifact@v3
        with:
          name: handler

      - run: mv ./handler ./$HANDLER_NAME
      
      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          tenant-id: a26571f1-22b3-4756-ac7b-39ca684fab48
          subscription-id: 108b3ddb-53fb-4344-80b2-d6c151912be6
          client-id: ${{ env.LIVE_DEPLOYMENT_APP_ID }}

      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.LIVE_FUNCTION_NAME }}
          respect-funcignore: 'true'
  
  healthcheck-live:
    needs: deploy-live
    runs-on: ubuntu-20.04
    
    steps:
      - name: Probe
        uses: Jtalk/url-health-check-action@v3
        with:
          url: ${{ env.LIVE_HEALTHCHECK }}
          max-attempts: 5
          retry-delay: 10s
          follow-redirect: true
      
